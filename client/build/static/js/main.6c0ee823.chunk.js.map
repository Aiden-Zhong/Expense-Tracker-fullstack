{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","_id","payload","error","initalState","loading","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","getTransactions","a","axios","get","res","data","deleteTransaction","id","delete","addTransaction","config","post","Provider","value","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","uuidv4","fetch","method","body","JSON","stringify","headers","className","htmlFor","onChange","target","placeholder","Balance","total","map","reduce","acc","item","Header","IncomeExpense","amounts","income","expense","Math","abs","Transaction","sign","onClick","TransactionList","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0ee823.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                transactions: action.payload\r\n            }\r\n        case 'TRANSACTION_ERROR' :\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from 'axios';\r\n\r\nconst initalState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n};\r\n\r\nexport const GlobalContext = createContext(initalState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initalState);\r\n\r\n    const getTransactions = async () => {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.res.data.error\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //Actions\r\n    const deleteTransaction = async (id) => {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.res.data.error\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const addTransaction = async (transaction) => {\r\n        const config = {\r\n            'headers': {\r\n                'Content-Type': \"application/json\"\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.res.data.error\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return <GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        deleteTransaction,\r\n        addTransaction,\r\n        getTransactions\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n}","import { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { v4 as uuidv4} from 'uuid'\r\n\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const newTransaction = {\r\n            id: uuidv4(),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        fetch('https://expense-tracker-af1b9-default-rtdb.firebaseio.com/transactions.json',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(newTransaction),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }    \r\n        )\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}  placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import { GlobalContext } from \"../context/GlobalState\"\r\nimport { useContext } from \"react\"\r\n\r\nconst Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => {return transaction.amount})\r\n    const total = amounts.reduce((acc, item) => (acc +=item), 0);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useContext } from \"react\"\r\nimport { GlobalContext } from \"../context/GlobalState\"\r\n\r\nconst IncomeExpense = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts.filter(item => item > 0).reduce((acc,item) => (acc += item), 0);\r\n    const expense = (amounts.filter(item => item < 0).reduce((acc,item) => (acc += item), 0))*-1;\r\n\r\n\r\n    return (\r\n        <div className='inc-exp-container'>\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className='money plus'>+${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className='money minus'>-${Math.abs(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpense\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({transaction}) => {\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n                {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n                <button onClick={() => deleteTransaction(transaction._id)\r\n                } className=\"delete-btn\">x</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import { useContext, useEffect } from \"react\"\r\nimport { GlobalContext } from \"../context/GlobalState\"\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n    const {transactions, getTransactions} = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map((transaction) => (<Transaction key={transaction.id} transaction={transaction}/>))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpense from './components/IncomeExpense';\nimport TransactionList from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n \n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}